---
- name: Configure Nginx Web Server
  hosts: webserver
  become: yes

  tasks:
    # Проверка и генерация SSH-ключа
    - name: Проверка существования SSH-ключа
      stat:
        path: "{{ ssh_key_path }}"
      register: ssh_key_stat

    - name: Генерация SSH-ключа, если его нет
      openssh_keypair:
        path: "{{ ssh_key_path }}"
        type: rsa
        size: 4096
        force: no
      when: not ssh_key_stat.stat.exists
      register: ssh_keypair

    - name: Вывести публичный ключ (если ключ был сгенерирован)
      debug:
        msg: "Новый SSH-ключ сгенерирован. Публичный ключ: {{ ssh_keypair.public_key }}"
      when: ssh_keypair is defined and ssh_keypair.changed

    - name: Добавить публичный ключ на целевую машину
      authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ ssh_keypair.public_key }}"
      when: ssh_keypair is defined and ssh_keypair.changed

    - name: Убедиться, что целевая машина доступна по SSH
      wait_for:
        host: "{{ ansible_host }}"
        port: 22
        timeout: 30
        state: started

    # Установка и настройка Nginx
    - name: Установка Nginx
      dnf:
        name: nginx
        state: present
        update_cache: yes

    - name: Создание каталога для конфигурации Nginx
      file:
        path: /etc/nginx/conf.d
        state: directory
        mode: 0755

    - name: Копирование основного конфига Nginx из шаблона
      template:
        src: "{{ nginx_conf_template }}"
        dest: /etc/nginx/nginx.conf
        mode: 0644
      notify: restart nginx

    - name: Копирование конфига сайта из шаблона
      template:
        src: "{{ nginx_site_template }}"
        dest: /etc/nginx/conf.d/default.conf
        mode: 0644
      notify: restart nginx

    - name: Создание корневой директории веб-сервера
      file:
        path: "{{ nginx_root }}"
        state: directory
        mode: 0755

    - name: Создание тестовой страницы index.html
      copy:
        dest: "{{ nginx_root }}/{{ nginx_index }}"
        content: |
          <html>
            <head>
              <title>Welcome to {{ nginx_server_name }}</title>
            </head>
            <body>
              <h1>Nginx successfully configured by Ansible!</h1>
              <p>Host: {{ ansible_hostname }}</p>
              <p>IP: {{ ansible_host }}</p>
            </body>
          </html>
        mode: 0644

    - name: Разрешение HTTP и HTTPS в firewalld
      firewalld:
        service: "{{ item }}"
        state: enabled
        permanent: yes
        immediate: yes
      loop:
        - http
        - https

    - name: Запуск и включение Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Проверка доступности веб-сервера
      uri:
        url: "http://{{ ansible_host }}:{{ nginx_port }}"
        return_content: yes
        status_code: 200
      register: nginx_test
      until: nginx_test.status == 200
      retries: 5
      delay: 3

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
